{"ast":null,"code":"import _createClass from \"/home/asmane/vtc/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/home/asmane/vtc/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _assertThisInitialized from \"/home/asmane/vtc/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/asmane/vtc/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/asmane/vtc/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _get from \"/home/asmane/vtc/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/home/asmane/vtc/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport { MixedType } from './MixedType';\nexport var BooleanType = /*#__PURE__*/function (_MixedType) {\n  _inherits(BooleanType, _MixedType);\n  var _super = _createSuper(BooleanType);\n  function BooleanType(errorMessage) {\n    var _thisSuper, _this;\n    _classCallCheck(this, BooleanType);\n    _this = _super.call(this, 'boolean');\n    _get((_thisSuper = _assertThisInitialized(_this), _getPrototypeOf(BooleanType.prototype)), \"pushRule\", _thisSuper).call(_thisSuper, {\n      onValid: function onValid(v) {\n        return typeof v === 'boolean';\n      },\n      errorMessage: errorMessage || _this.locale.type\n    });\n    return _this;\n  }\n  return _createClass(BooleanType);\n}(MixedType);\nexport default function getBooleanType(errorMessage) {\n  return new BooleanType(errorMessage);\n}","map":{"version":3,"names":["MixedType","BooleanType","_MixedType","_inherits","_super","_createSuper","errorMessage","_thisSuper","_this","_classCallCheck","call","_get","_assertThisInitialized","_getPrototypeOf","prototype","onValid","v","locale","type","_createClass","getBooleanType"],"sources":["/home/asmane/vtc/node_modules/schema-typed/src/BooleanType.ts"],"sourcesContent":["import { MixedType } from './MixedType';\nimport { ErrorMessageType } from './types';\nimport { BooleanTypeLocale } from './locales';\n\nexport class BooleanType<DataType = any, E = ErrorMessageType> extends MixedType<\n  boolean,\n  DataType,\n  E,\n  BooleanTypeLocale\n> {\n  constructor(errorMessage?: E | string) {\n    super('boolean');\n    super.pushRule({\n      onValid: v => typeof v === 'boolean',\n      errorMessage: errorMessage || this.locale.type\n    });\n  }\n}\n\nexport default function getBooleanType<DataType = any, E = string>(errorMessage?: E) {\n  return new BooleanType<DataType, E>(errorMessage);\n}\n"],"mappings":";;;;;;;AAAA,SAASA,SAAS,QAAQ,aAAa;AAIvC,WAAaC,WAAkD,0BAAAC,UAAA;EAAAC,SAAA,CAAAF,WAAA,EAAAC,UAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,WAAA;EAM7D,SAAAA,YAAYK,YAAyB;IAAA,IAAAC,UAAA,EAAAC,KAAA;IAAAC,eAAA,OAAAR,WAAA;IACnCO,KAAA,GAAAJ,MAAA,CAAAM,IAAA,OAAM,SAAS;IACfC,IAAA,EAAAJ,UAAA,GAAAK,sBAAA,CAAAJ,KAAA,GAAAK,eAAA,CAAAZ,WAAA,CAAAa,SAAA,gBAAAP,UAAA,EAAAG,IAAA,CAAAH,UAAA,EAAe;MACbQ,OAAO,EAAE,SAAAA,QAAAC,CAAC;QAAA,OAAI,OAAOA,CAAC,KAAK,SAAS;MAAA;MACpCV,YAAY,EAAEA,YAAY,IAAIE,KAAA,CAAKS,MAAM,CAACC;KAC3C;IAAE,OAAAV,KAAA;EACL;EAAC,OAAAW,YAAA,CAAAlB,WAAA;AAAA,EAZoED,SAKtE;AAUD,eAAc,SAAUoB,cAAcA,CAA6Bd,YAAgB;EACjF,OAAO,IAAIL,WAAW,CAAcK,YAAY,CAAC;AACnD"},"metadata":{},"sourceType":"module","externalDependencies":[]}
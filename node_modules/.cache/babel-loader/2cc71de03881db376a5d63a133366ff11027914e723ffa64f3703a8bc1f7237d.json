{"ast":null,"code":"import _slicedToArray from \"/home/asmane/vtc/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _toConsumableArray from \"/home/asmane/vtc/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"/home/asmane/vtc/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/home/asmane/vtc/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"color\", \"size\", \"strokeWidth\", \"absoluteStrokeWidth\", \"children\"];\n/**\n * lucide-react v0.288.0 - ISC\n */\n\nimport { forwardRef, createElement } from 'react';\nimport defaultAttributes from './defaultAttributes.js';\nvar toKebabCase = function toKebabCase(string) {\n  return string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\n};\nvar createLucideIcon = function createLucideIcon(iconName, iconNode) {\n  var Component = forwardRef(function (_ref, ref) {\n    var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \"currentColor\" : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      _ref$strokeWidth = _ref.strokeWidth,\n      strokeWidth = _ref$strokeWidth === void 0 ? 2 : _ref$strokeWidth,\n      absoluteStrokeWidth = _ref.absoluteStrokeWidth,\n      children = _ref.children,\n      rest = _objectWithoutProperties(_ref, _excluded);\n    return createElement(\"svg\", _objectSpread(_objectSpread({\n      ref: ref\n    }, defaultAttributes), {}, {\n      width: size,\n      height: size,\n      stroke: color,\n      strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,\n      className: \"lucide lucide-\".concat(toKebabCase(iconName))\n    }, rest), [].concat(_toConsumableArray(iconNode.map(function (_ref2) {\n      var _ref3 = _slicedToArray(_ref2, 2),\n        tag = _ref3[0],\n        attrs = _ref3[1];\n      return createElement(tag, attrs);\n    })), _toConsumableArray((Array.isArray(children) ? children : [children]) || [])));\n  });\n  Component.displayName = \"\".concat(iconName);\n  return Component;\n};\nexport { createLucideIcon as default, toKebabCase };","map":{"version":3,"names":["toKebabCase","string","replace","toLowerCase","createLucideIcon","iconName","iconNode","Component","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","_ref$strokeWidth","strokeWidth","absoluteStrokeWidth","children","rest","_objectWithoutProperties","_excluded","createElement","_objectSpread","defaultAttributes","width","height","stroke","Number","className","concat","_toConsumableArray","map","_ref2","_ref3","_slicedToArray","tag","attrs","Array","isArray","displayName"],"sources":["/home/asmane/vtc/node_modules/lucide-react/src/createLucideIcon.ts"],"sourcesContent":["import { forwardRef, createElement, ReactSVG, SVGProps, ForwardRefExoticComponent, RefAttributes } from 'react';\nimport defaultAttributes from './defaultAttributes';\n\nexport type IconNode = [elementName: keyof ReactSVG, attrs: Record<string, string>][]\n\nexport type SVGAttributes = Partial<SVGProps<SVGSVGElement>>\ntype ComponentAttributes = RefAttributes<SVGSVGElement> & SVGAttributes\n\nexport interface LucideProps extends ComponentAttributes {\n  size?: string | number\n  absoluteStrokeWidth?: boolean\n}\n\nexport type LucideIcon = ForwardRefExoticComponent<LucideProps>;\n/**\n * Converts string to KebabCase\n * Copied from scripts/helper. If anyone knows how to properly import it here\n * then please fix it.\n *\n * @param {string} string\n * @returns {string} A kebabized string\n */\nexport const toKebabCase = (string: string) => string.replace(/([a-z0-9])([A-Z])/g, '$1-$2').toLowerCase();\n\nconst createLucideIcon = (iconName: string, iconNode: IconNode): LucideIcon => {\n  const Component = forwardRef<SVGSVGElement, LucideProps>(\n    ({ color = 'currentColor', size = 24, strokeWidth = 2, absoluteStrokeWidth, children, ...rest }, ref) =>\n      createElement(\n        'svg',\n        {\n          ref,\n          ...defaultAttributes,\n          width: size,\n          height: size,\n          stroke: color,\n          strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,\n          className: `lucide lucide-${toKebabCase(iconName)}`,\n          ...rest,\n        },\n        [\n          ...iconNode.map(([tag, attrs]) => createElement(tag, attrs)),\n          ...(\n            (Array.isArray(children) ? children : [children]) || []\n          )\n        ],\n      ),\n  );\n\n  Component.displayName = `${iconName}`;\n\n  return Component;\n};\n\nexport default createLucideIcon\n"],"mappings":";;;;;;;;;;;AAsBa,IAAAA,WAAA,GAAc,SAAdA,YAAeC,MAAmB;EAAA,OAAAA,MAAA,CAAOC,OAAA,CAAQ,oBAAsB,SAAO,EAAEC,WAAY;AAAA;AAEnG,IAAAC,gBAAA,GAAmB,SAAnBA,iBAAoBC,QAAA,EAAkBC,QAAmC;EAC7E,IAAMC,SAAY,GAAAC,UAAA,CAChB,UAAAC,IAAA,EAAiGC,GAC/F;IAAA,IAAAC,UAAA,GAAAF,IAAA,CADCG,KAAQ;MAARA,KAAQ,GAAAD,UAAA,+BAAAA,UAAA;MAAAE,SAAA,GAAAJ,IAAA,CAAgBK,IAAO;MAAPA,IAAO,GAAAD,SAAA,mBAAAA,SAAA;MAAAE,gBAAA,GAAAN,IAAA,CAAIO,WAAc;MAAdA,WAAc,GAAAD,gBAAA,kBAAAA,gBAAA;MAAGE,mBAAqB,GAAAR,IAAA,CAArBQ,mBAAqB;MAAAC,QAAA,GAAAT,IAAA,CAAAS,QAAA;MAAaC,IAAK,GAAAC,wBAAA,CAAAX,IAAA,EAAAY,SAAA;IAAA,OAC5FC,aAAA,CACE,OAAAC,aAAA,CAAAA,aAAA;MAEEb,GAAA,EAAAA;IAAA,GACGc,iBAAA;MACHC,KAAO,EAAAX,IAAA;MACPY,MAAQ,EAAAZ,IAAA;MACRa,MAAQ,EAAAf,KAAA;MACRI,WAAA,EAAaC,mBAAA,GAAsBW,MAAO,CAAAZ,WAAW,IAAI,EAAK,GAAAY,MAAA,CAAOd,IAAI,CAAI,GAAAE,WAAA;MAC7Ea,SAAA,mBAAAC,MAAA,CAA4B9B,WAAA,CAAYK,QAAQ;IAAA,GAC7Cc,IAAA,MAAAW,MAAA,CAAAC,kBAAA,CAGAzB,QAAS,CAAA0B,GAAA,CAAI,UAAAC,KAAA;MAAA,IAAAC,KAAA,GAAAC,cAAA,CAAAF,KAAA;QAAEG,GAAK,GAAAF,KAAA;QAAAG,KAAK,GAAAH,KAAA;MAAA,OAAMZ,aAAA,CAAcc,GAAK,EAAAC,KAAK,CAAC;IAAA,KAAAN,kBAAA,CAC3D,CACGO,KAAA,CAAMC,OAAQ,CAAArB,QAAQ,IAAIA,QAAW,IAACA,QAAQ,MAAM,EAAC,EAG5D;EAAA,EACJ;EAEAX,SAAA,CAAUiC,WAAA,MAAAV,MAAA,CAAiBzB,QAAA;EAEpB,OAAAE,SAAA;AACT"},"metadata":{},"sourceType":"module","externalDependencies":[]}
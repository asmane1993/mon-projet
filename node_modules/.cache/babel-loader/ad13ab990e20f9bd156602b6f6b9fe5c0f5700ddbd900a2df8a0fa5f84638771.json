{"ast":null,"code":"import _slicedToArray from \"/home/asmane/vtc/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n// src/useSet.ts\nimport { useCallback, useMemo, useState } from \"react\";\nfunction useSet(iterable) {\n  var _useState = useState(function () {\n      return new Set(iterable);\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    set = _useState2[0],\n    setSet = _useState2[1];\n  var add = useCallback(function () {\n    for (var _len = arguments.length, values = new Array(_len), _key = 0; _key < _len; _key++) {\n      values[_key] = arguments[_key];\n    }\n    setSet(function (prev) {\n      var copy = new Set(prev);\n      for (var _i = 0, _values = values; _i < _values.length; _i++) {\n        var value = _values[_i];\n        copy.add(value);\n      }\n      return copy;\n    });\n  }, []);\n  var deleteValues = useCallback(function () {\n    for (var _len2 = arguments.length, values = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      values[_key2] = arguments[_key2];\n    }\n    setSet(function (prev) {\n      var copy = new Set(prev);\n      for (var _i2 = 0, _values2 = values; _i2 < _values2.length; _i2++) {\n        var value = _values2[_i2];\n        copy.delete(value);\n      }\n      return copy;\n    });\n  }, []);\n  var toggle = useCallback(function (value) {\n    setSet(function (prev) {\n      var copy = new Set(prev);\n      if (!copy.has(value)) {\n        copy.add(value);\n      } else {\n        copy.delete(value);\n      }\n      return copy;\n    });\n  }, []);\n  var clear = useCallback(function () {\n    setSet( /* @__PURE__ */new Set());\n  }, []);\n  var sync = useCallback(function (values) {\n    setSet(new Set(values));\n  }, []);\n  return useMemo(function () {\n    return {\n      size: set.size,\n      has: function has(value) {\n        return set.has(value);\n      },\n      add: add,\n      delete: deleteValues,\n      clear: clear,\n      sync: sync,\n      toArray: function toArray() {\n        return Array.from(set);\n      },\n      toggle: toggle\n    };\n  }, [set, add, deleteValues, clear, sync, toggle]);\n}\nexport { useSet };","map":{"version":3,"names":["useCallback","useMemo","useState","useSet","iterable","_useState","Set","_useState2","_slicedToArray","set","setSet","add","_len","arguments","length","values","Array","_key","prev","copy","_i","_values","value","deleteValues","_len2","_key2","_i2","_values2","delete","toggle","has","clear","sync","size","toArray","from"],"sources":["/home/asmane/vtc/node_modules/react-use-set/dist/index.mjs"],"sourcesContent":["// src/useSet.ts\nimport { useCallback, useMemo, useState } from \"react\";\nfunction useSet(iterable) {\n  const [set, setSet] = useState(() => new Set(iterable));\n  const add = useCallback((...values) => {\n    setSet((prev) => {\n      const copy = new Set(prev);\n      for (const value of values) {\n        copy.add(value);\n      }\n      return copy;\n    });\n  }, []);\n  const deleteValues = useCallback((...values) => {\n    setSet((prev) => {\n      const copy = new Set(prev);\n      for (const value of values) {\n        copy.delete(value);\n      }\n      return copy;\n    });\n  }, []);\n  const toggle = useCallback((value) => {\n    setSet((prev) => {\n      const copy = new Set(prev);\n      if (!copy.has(value)) {\n        copy.add(value);\n      } else {\n        copy.delete(value);\n      }\n      return copy;\n    });\n  }, []);\n  const clear = useCallback(() => {\n    setSet(/* @__PURE__ */ new Set());\n  }, []);\n  const sync = useCallback((values) => {\n    setSet(new Set(values));\n  }, []);\n  return useMemo(() => {\n    return {\n      size: set.size,\n      has: (value) => set.has(value),\n      add,\n      delete: deleteValues,\n      clear,\n      sync,\n      toArray: () => Array.from(set),\n      toggle\n    };\n  }, [set, add, deleteValues, clear, sync, toggle]);\n}\nexport {\n  useSet\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
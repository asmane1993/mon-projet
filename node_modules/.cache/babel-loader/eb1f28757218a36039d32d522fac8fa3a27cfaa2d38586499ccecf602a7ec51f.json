{"ast":null,"code":"import _slicedToArray from \"/home/asmane/vtc/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _classCallCheck from \"/home/asmane/vtc/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/asmane/vtc/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/asmane/vtc/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/asmane/vtc/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/asmane/vtc/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _get from \"/home/asmane/vtc/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/home/asmane/vtc/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport { MixedType } from './MixedType';\nimport { createValidator, createValidatorAsync, checkRequired, isEmpty } from './utils';\nexport var ObjectType = /*#__PURE__*/function (_MixedType) {\n  _inherits(ObjectType, _MixedType);\n  var _super = _createSuper(ObjectType);\n  function ObjectType(errorMessage) {\n    var _thisSuper, _this;\n    _classCallCheck(this, ObjectType);\n    _this = _super.call(this, 'object');\n    _get((_thisSuper = _assertThisInitialized(_this), _getPrototypeOf(ObjectType.prototype)), \"pushRule\", _thisSuper).call(_thisSuper, {\n      onValid: function onValid(v) {\n        return typeof v === 'object';\n      },\n      errorMessage: errorMessage || _this.locale.type\n    });\n    return _this;\n  }\n  _createClass(ObjectType, [{\n    key: \"check\",\n    value: function check() {\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.value;\n      var data = arguments.length > 1 ? arguments[1] : undefined;\n      var fieldName = arguments.length > 2 ? arguments[2] : undefined;\n      var check = function check(value, data, type) {\n        if (type.required && !checkRequired(value, type.trim, type.emptyAllowed)) {\n          return {\n            hasError: true,\n            errorMessage: type.requiredMessage\n          };\n        }\n        if (type.objectTypeSchemaSpec && typeof value === 'object') {\n          var checkResultObject = {};\n          var hasError = false;\n          Object.entries(type.objectTypeSchemaSpec).forEach(function (_ref) {\n            var _ref2 = _slicedToArray(_ref, 2),\n              k = _ref2[0],\n              v = _ref2[1];\n            var checkResult = check(value[k], value, v);\n            if (checkResult === null || checkResult === void 0 ? void 0 : checkResult.hasError) {\n              hasError = true;\n            }\n            checkResultObject[k] = checkResult;\n          });\n          return {\n            hasError: hasError,\n            object: checkResultObject\n          };\n        }\n        var validator = createValidator(data, fieldName);\n        var checkStatus = validator(value, type.priorityRules);\n        if (checkStatus) {\n          return checkStatus;\n        }\n        if (!type.required && isEmpty(value)) {\n          return {\n            hasError: false\n          };\n        }\n        return validator(value, type.rules) || {\n          hasError: false\n        };\n      };\n      return check(value, data, this);\n    }\n  }, {\n    key: \"checkAsync\",\n    value: function checkAsync() {\n      var _this2 = this;\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.value;\n      var data = arguments.length > 1 ? arguments[1] : undefined;\n      var fieldName = arguments.length > 2 ? arguments[2] : undefined;\n      var check = function check(value, data, type) {\n        if (type.required && !checkRequired(value, type.trim, type.emptyAllowed)) {\n          return Promise.resolve({\n            hasError: true,\n            errorMessage: _this2.requiredMessage\n          });\n        }\n        var validator = createValidatorAsync(data, fieldName);\n        return new Promise(function (resolve) {\n          if (type.objectTypeSchemaSpec && typeof value === 'object') {\n            var checkResult = {};\n            var checkAll = [];\n            var keys = [];\n            Object.entries(type.objectTypeSchemaSpec).forEach(function (_ref3) {\n              var _ref4 = _slicedToArray(_ref3, 2),\n                k = _ref4[0],\n                v = _ref4[1];\n              checkAll.push(check(value[k], value, v));\n              keys.push(k);\n            });\n            return Promise.all(checkAll).then(function (values) {\n              values.forEach(function (v, index) {\n                checkResult[keys[index]] = v;\n              });\n              resolve({\n                object: checkResult\n              });\n            });\n          }\n          return validator(value, type.priorityRules).then(function (checkStatus) {\n            if (checkStatus) {\n              resolve(checkStatus);\n            }\n          }).then(function () {\n            if (!type.required && isEmpty(value)) {\n              resolve({\n                hasError: false\n              });\n            }\n          }).then(function () {\n            return validator(value, type.rules);\n          }).then(function (checkStatus) {\n            if (checkStatus) {\n              resolve(checkStatus);\n            }\n            resolve({\n              hasError: false\n            });\n          });\n        });\n      };\n      return check(value, data, this);\n    }\n    /**\n     * @example\n     * ObjectType().shape({\n     *  name: StringType(),\n     *  age: NumberType()\n     * })\n     */\n  }, {\n    key: \"shape\",\n    value: function shape(fields) {\n      this.objectTypeSchemaSpec = fields;\n      return this;\n    }\n  }]);\n  return ObjectType;\n}(MixedType);\nexport default function getObjectType(errorMessage) {\n  return new ObjectType(errorMessage);\n}","map":{"version":3,"names":["MixedType","createValidator","createValidatorAsync","checkRequired","isEmpty","ObjectType","_MixedType","_inherits","_super","_createSuper","errorMessage","_thisSuper","_this","_classCallCheck","call","_get","_assertThisInitialized","_getPrototypeOf","prototype","onValid","v","locale","type","_createClass","key","value","check","arguments","length","undefined","data","fieldName","required","trim","emptyAllowed","hasError","requiredMessage","objectTypeSchemaSpec","checkResultObject","Object","entries","forEach","_ref","_ref2","_slicedToArray","k","checkResult","object","validator","checkStatus","priorityRules","rules","checkAsync","_this2","Promise","resolve","checkAll","keys","_ref3","_ref4","push","all","then","values","index","shape","fields","getObjectType"],"sources":["/home/asmane/vtc/node_modules/schema-typed/src/ObjectType.ts"],"sourcesContent":["import { MixedType } from './MixedType';\nimport { createValidator, createValidatorAsync, checkRequired, isEmpty } from './utils';\nimport { PlainObject, SchemaDeclaration, CheckResult, ErrorMessageType } from './types';\nimport { ObjectTypeLocale } from './locales';\n\nexport class ObjectType<DataType = any, E = ErrorMessageType> extends MixedType<\n  PlainObject,\n  DataType,\n  E,\n  ObjectTypeLocale\n> {\n  objectTypeSchemaSpec: SchemaDeclaration<DataType, E>;\n  constructor(errorMessage?: E | string) {\n    super('object');\n    super.pushRule({\n      onValid: v => typeof v === 'object',\n      errorMessage: errorMessage || this.locale.type\n    });\n  }\n\n  check(value: PlainObject = this.value, data?: DataType, fieldName?: string | string[]) {\n    const check = (value: any, data: any, type: any) => {\n      if (type.required && !checkRequired(value, type.trim, type.emptyAllowed)) {\n        return { hasError: true, errorMessage: type.requiredMessage };\n      }\n\n      if (type.objectTypeSchemaSpec && typeof value === 'object') {\n        const checkResultObject: any = {};\n        let hasError = false;\n        Object.entries(type.objectTypeSchemaSpec).forEach(([k, v]) => {\n          const checkResult = check(value[k], value, v);\n          if (checkResult?.hasError) {\n            hasError = true;\n          }\n          checkResultObject[k] = checkResult;\n        });\n\n        return { hasError, object: checkResultObject };\n      }\n\n      const validator = createValidator<PlainObject, DataType, E | string>(data, fieldName);\n      const checkStatus = validator(value, type.priorityRules);\n\n      if (checkStatus) {\n        return checkStatus;\n      }\n\n      if (!type.required && isEmpty(value)) {\n        return { hasError: false };\n      }\n\n      return validator(value, type.rules) || { hasError: false };\n    };\n\n    return check(value, data, this) as CheckResult<E | string, DataType>;\n  }\n\n  checkAsync(value: PlainObject = this.value, data?: DataType, fieldName?: string | string[]) {\n    const check = (value: any, data: any, type: any) => {\n      if (type.required && !checkRequired(value, type.trim, type.emptyAllowed)) {\n        return Promise.resolve({ hasError: true, errorMessage: this.requiredMessage });\n      }\n\n      const validator = createValidatorAsync<PlainObject, DataType, E | string>(data, fieldName);\n\n      return new Promise(resolve => {\n        if (type.objectTypeSchemaSpec && typeof value === 'object') {\n          const checkResult: any = {};\n          const checkAll: Promise<unknown>[] = [];\n          const keys: string[] = [];\n          Object.entries(type.objectTypeSchemaSpec).forEach(([k, v]) => {\n            checkAll.push(check(value[k], value, v));\n            keys.push(k);\n          });\n\n          return Promise.all(checkAll).then(values => {\n            values.forEach((v, index) => {\n              checkResult[keys[index]] = v;\n            });\n\n            resolve({ object: checkResult });\n          });\n        }\n\n        return validator(value, type.priorityRules)\n          .then((checkStatus: CheckResult<E | string, DataType> | void | null) => {\n            if (checkStatus) {\n              resolve(checkStatus);\n            }\n          })\n          .then(() => {\n            if (!type.required && isEmpty(value)) {\n              resolve({ hasError: false });\n            }\n          })\n          .then(() => validator(value, type.rules))\n          .then((checkStatus: CheckResult<E | string, DataType> | void | null) => {\n            if (checkStatus) {\n              resolve(checkStatus);\n            }\n            resolve({ hasError: false });\n          });\n      });\n    };\n\n    return check(value, data, this) as Promise<CheckResult<E | string, DataType>>;\n  }\n\n  /**\n   * @example\n   * ObjectType().shape({\n   *  name: StringType(),\n   *  age: NumberType()\n   * })\n   */\n  shape(fields: SchemaDeclaration<DataType, E>) {\n    this.objectTypeSchemaSpec = fields;\n    return this;\n  }\n}\n\nexport default function getObjectType<DataType = any, E = string>(errorMessage?: E) {\n  return new ObjectType<DataType, E>(errorMessage);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}